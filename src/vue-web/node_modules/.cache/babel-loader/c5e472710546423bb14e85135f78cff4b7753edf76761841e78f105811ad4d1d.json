{"ast":null,"code":"import { Button, Select } from 'element-ui';\nexport default {\n  name: 'DiscussionPage',\n  components: {\n    elButton: Button,\n    elSelect: Select\n  },\n  data() {\n    return {\n      size: [5, 4],\n      mouseId: null,\n      // 地鼠随机出现定时器的值\n      site: [],\n      // 地鼠出现的位置\n      count: 0,\n      // 分数\n      time: 30,\n      // 游戏倒计时 s\n      timerId: null,\n      // 倒计时定时器的值\n      isClick: false,\n      // 是否能点击开始游戏按钮\n      level: null,\n      // 难度等级\n      levelOptions: [{\n        label: '低难度',\n        value: 0\n      }, {\n        label: '中难度',\n        value: 1\n      }, {\n        label: '高难度',\n        value: 2\n      }],\n      speed: 1500,\n      // 地鼠出现的速度\n      // 地鼠图片\n      imgList: [require('../../assets/Game/Mouse/3.jpg'), require('../../assets/Game/Mouse/5.jpg')],\n      // 当前地鼠的图片\n      imgSrc: null\n    };\n  },\n  mounted() {\n    // 适配移动端界面\n    const ua = navigator.userAgent;\n    const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    const isIphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n    const isAndroid = ua.match(/(Android)\\s+([\\d.]+)/);\n    const isMobile = isIphone || isAndroid;\n    if (isMobile) {\n      this.size = [3, 3];\n    }\n  },\n  methods: {\n    // 初始化\n    ready() {\n      // 倒计时结束 不能调用函数\n      if (this.time > 0) {\n        this.imgSrc = this.imgList[0];\n        this.randomSite();\n        this.mouseId = setInterval(this.randomSite, this.speed);\n      }\n    },\n    // 渲染地鼠图片\n    isShow(x, y) {\n      return this.site[0] === x && this.site[1] === y;\n    },\n    // 地鼠位置随机产生\n    randomSite() {\n      const x = Math.floor(Math.random() * this.size[0] + 1);\n      const y = Math.floor(Math.random() * this.size[1] + 1);\n      this.site = [x, y];\n    },\n    // 游戏倒计时\n    spendTime() {\n      this.timerId = setInterval(() => {\n        this.time--;\n        if (this.time === 0) {\n          // 地鼠位置设为空\n          this.site = [];\n          clearInterval(this.mouseId);\n          clearInterval(this.timerId);\n          this.isClick = false;\n          // 弹出游戏结束提示\n          this.$message({\n            message: '游戏结束',\n            type: 'success',\n            center: true,\n            duration: 1000\n          });\n        }\n      }, 1000);\n    },\n    // 打击地鼠\n    hitGround(x, y) {\n      // 打中地鼠 并且地鼠要出来\n      if (this.site[0] === x && this.site[1] === y && this.time > 0) {\n        //  增加分数\n        this.count++;\n        // 切换为打中地鼠的图片\n        this.imgSrc = this.imgList[1];\n        // 产生音效\n        this.$refs.audio.play();\n        // 暂停循环\n        clearInterval(this.mouseId);\n        // 地鼠位置置为空 延迟为了展示被击中的动画\n        setTimeout(() => {\n          this.site = [];\n        }, 300);\n        //  延迟下 使音效和动作能衔接好 随机时间出现下次地鼠\n        setTimeout(() => {\n          // 重置地鼠位置和地鼠刷新时间\n          this.ready();\n        }, (Math.random() + 1) * 1000);\n      }\n    },\n    // 开始游戏\n    startGame() {\n      // 弹出游戏开始提示\n      this.$message({\n        message: '游戏开始',\n        type: 'success',\n        center: true,\n        duration: 1000\n      });\n      // 初始化时间和分数\n      this.time = 30;\n      this.count = 0;\n      this.ready();\n      this.spendTime();\n      this.isClick = true;\n    },\n    // 改变游戏难度\n    changelevel(val) {\n      switch (val) {\n        case 0:\n          this.speed = 1500;\n          break;\n        case 1:\n          this.speed = 1000;\n          break;\n        case 2:\n          this.speed = 500;\n          break;\n        default:\n          this.speed = 1500;\n          break;\n      }\n    }\n  }\n};","map":{"version":3,"names":["Button","Select","name","components","elButton","elSelect","data","size","mouseId","site","count","time","timerId","isClick","level","levelOptions","label","value","speed","imgList","require","imgSrc","mounted","ua","navigator","userAgent","ipad","match","isIphone","isAndroid","isMobile","methods","ready","randomSite","setInterval","isShow","x","y","Math","floor","random","spendTime","clearInterval","$message","message","type","center","duration","hitGround","$refs","audio","play","setTimeout","startGame","changelevel","val"],"sources":["src/views/Game/Mouse.vue"],"sourcesContent":["<template>\n  <div id=\"discussion-page\">\n    <div class=\"container\">\n\n      <div class=\"header-row\">\n        <h2 class=\"discussion-title\">打地鼠小游戏</h2>\n      </div>\n\n      <!-- 打地鼠游戏区域 -->\n      <div class=\"content\">\n        <header>\n          <audio src=\"../../assets/Game/Mouse/1.mp3\" ref=\"audio\"></audio>\n          <div>\n            <div>\n              <el-button\n                  type=\"primary\"\n                  size=\"small\"\n                  round\n                  @click=\"startGame\"\n                  :disabled=\"isClick\"\n                  class=\"custom-button\">\n                开始游戏\n              </el-button>\n\n\n              <el-select v-model=\"level\" placeholder=\"难度选择\" @change=\"changelevel\">\n                <el-option v-for=\"item in levelOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                </el-option>\n              </el-select>\n            </div>\n            <div>\n              <span><i class=\"el-icon-s-flag\"></i>分数: {{count}}</span>\n              <span><i class=\"el-icon-time\"></i>倒计时: {{time}} S</span>\n            </div>\n          </div>\n        </header>\n        <div class=\"row\" v-for=\"y in size[1]\" :key=\"y\">\n          <!--在老鼠被击中时 不能触发点击事件-->\n          <div class=\"box\" v-for=\"x in size[0]\" :key=\"x\" @click.stop.prevent=\"imgSrc !== imgList[1] && hitGround(x,y)\">\n            <img v-show=\"isShow(x,y)\" :src=\"imgSrc\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Button, Select } from 'element-ui';\n\nexport default {\n  name: 'DiscussionPage',\n  components: {\n    elButton: Button,\n    elSelect: Select,\n  },\n  data() {\n    return {\n      size: [5, 4],\n      mouseId: null, // 地鼠随机出现定时器的值\n      site: [], // 地鼠出现的位置\n      count: 0, // 分数\n      time: 30, // 游戏倒计时 s\n      timerId: null, // 倒计时定时器的值\n      isClick: false, // 是否能点击开始游戏按钮\n      level: null, // 难度等级\n      levelOptions: [\n        {\n          label: '低难度',\n          value: 0,\n        },\n        {\n          label: '中难度',\n          value: 1,\n        },\n        {\n          label: '高难度',\n          value: 2,\n        },\n      ],\n      speed: 1500, // 地鼠出现的速度\n      // 地鼠图片\n      imgList: [require('../../assets/Game/Mouse/3.jpg'), require('../../assets/Game/Mouse/5.jpg')],\n      // 当前地鼠的图片\n      imgSrc: null,\n    };\n  },\n  mounted() {\n    // 适配移动端界面\n    const ua = navigator.userAgent;\n    const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    const isIphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n    const isAndroid = ua.match(/(Android)\\s+([\\d.]+)/);\n    const isMobile = isIphone || isAndroid;\n    if (isMobile) {\n      this.size = [3, 3];\n    }\n  },\n  methods: {\n    // 初始化\n    ready() {\n      // 倒计时结束 不能调用函数\n      if (this.time > 0) {\n        this.imgSrc = this.imgList[0];\n        this.randomSite();\n        this.mouseId = setInterval(this.randomSite, this.speed);\n      }\n    },\n    // 渲染地鼠图片\n    isShow(x, y) {\n      return this.site[0] === x && this.site[1] === y;\n    },\n    // 地鼠位置随机产生\n    randomSite() {\n      const x = Math.floor(Math.random() * this.size[0] + 1);\n      const y = Math.floor(Math.random() * this.size[1] + 1);\n      this.site = [x, y];\n    },\n    // 游戏倒计时\n    spendTime() {\n      this.timerId = setInterval(() => {\n        this.time--;\n        if (this.time === 0) {\n          // 地鼠位置设为空\n          this.site = [];\n          clearInterval(this.mouseId);\n          clearInterval(this.timerId);\n          this.isClick = false;\n          // 弹出游戏结束提示\n          this.$message({\n            message: '游戏结束',\n            type: 'success',\n            center: true,\n            duration: 1000,\n          });\n        }\n      }, 1000);\n    },\n    // 打击地鼠\n    hitGround(x, y) {\n      // 打中地鼠 并且地鼠要出来\n      if (this.site[0] === x && this.site[1] === y && this.time > 0) {\n        //  增加分数\n        this.count++;\n        // 切换为打中地鼠的图片\n        this.imgSrc = this.imgList[1];\n        // 产生音效\n        this.$refs.audio.play();\n        // 暂停循环\n        clearInterval(this.mouseId);\n        // 地鼠位置置为空 延迟为了展示被击中的动画\n        setTimeout(() => {\n          this.site = [];\n        }, 300);\n        //  延迟下 使音效和动作能衔接好 随机时间出现下次地鼠\n        setTimeout(() => {\n          // 重置地鼠位置和地鼠刷新时间\n          this.ready();\n        }, (Math.random() + 1) * 1000);\n      }\n    },\n    // 开始游戏\n    startGame() {\n      // 弹出游戏开始提示\n      this.$message({\n        message: '游戏开始',\n        type: 'success',\n        center: true,\n        duration: 1000,\n      });\n      // 初始化时间和分数\n      this.time = 30;\n      this.count = 0;\n      this.ready();\n      this.spendTime();\n      this.isClick = true;\n    },\n    // 改变游戏难度\n    changelevel(val) {\n      switch (val) {\n        case 0:\n          this.speed = 1500;\n          break;\n        case 1:\n          this.speed = 1000;\n          break;\n        case 2:\n          this.speed = 500;\n          break;\n        default:\n          this.speed = 1500;\n          break;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n#discussion-page {\n  width: 100%;\n  height: 100%;\n  background-color: #ffe9e9;\n  font-family: Arial, sans-serif;\n}\n\n.container {\n  height: 600px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #ffe9e9;\n  padding: 20px;\n}\n.custom-button {\n  background-color: #eecacb !important;\n  color: #120101 !important;\n  border: none !important;\n  box-shadow: none !important;\n}\n.header-row {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 1000px;\n  margin-bottom: 20px;\n  position: relative;\n}\n\n.discussion-title {\n  font-size: 24px;\n  font-weight: bold;\n  flex-grow: 1;\n  text-align: center;\n\n}\n\n.content {\n  height: 400px;\n  width: 450px;\n  margin-left: 10%;\n\n  header {\n    width: 280px;\n    margin-bottom: 40px;\n    padding-left: 5px;\n\n    > div div {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-top: 5px;\n    }\n    .el-input__inner {\n      width: 150px !important;\n      height: 35px !important;\n      line-height: 35px !important;\n    }\n  }\n\n  .row {\n    display: flex;\n    .box {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 80px;\n      height: 80px;\n      cursor: url('../../assets/Game/Mouse/4.jpg'), auto;\n      border: 5px solid #f9d67f;\n      border-radius: 10px;\n      background-image: url('../../assets/Game/Mouse/2.jpg');\n\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}