{"ast":null,"code":"import { sendMessageToGpt } from '@/api/chatWithGpt';\nimport { v4 as uuidv4 } from 'uuid';\nexport default {\n  name: 'Detail',\n  props: {\n    title: String,\n    status: String,\n    value: String\n  },\n  data() {\n    return {\n      detail: '',\n      loading: true,\n      sessionId: uuidv4() // 生成新的 sessionId\n    };\n  },\n  async created() {\n    try {\n      // 构建分析请求的消息\n      const message = `分析 ${this.title},目前状态${this.status},${this.title}值为${this.value}`;\n      // 调用 GPT API 进行分析\n      const response = await sendMessageToGpt(message, this.sessionId);\n      this.detail = response.data.content;\n      this.playAdvice(response.data.content);\n    } catch (error) {\n      console.error('获取详细信息时出错:', error);\n      this.detail = '获取详细信息时发生错误。';\n    } finally {\n      this.loading = false;\n    }\n  },\n  methods: {\n    closeDetail() {\n      this.$emit('close');\n    },\n    playAdvice(text) {\n      // 检查浏览器是否支持 SpeechSynthesis\n      if ('speechSynthesis' in window) {\n        const utterance = new SpeechSynthesisUtterance(text);\n        utterance.lang = 'zh-CN'; // 设置语言为中文，如果需要其他语言可以修改\n        window.speechSynthesis.speak(utterance);\n      } else {\n        console.error('浏览器不支持 SpeechSynthesis');\n      }\n    }\n  }\n};","map":{"version":3,"names":["sendMessageToGpt","v4","uuidv4","name","props","title","String","status","value","data","detail","loading","sessionId","created","message","response","content","playAdvice","error","console","methods","closeDetail","$emit","text","window","utterance","SpeechSynthesisUtterance","lang","speechSynthesis","speak"],"sources":["src/views/Health/Detail.vue"],"sourcesContent":["<template>\r\n  <div class=\"detail-content\">\r\n    <button class=\"close-button\" @click=\"closeDetail\">×</button>\r\n    <h2>{{ title }} 详情</h2>\r\n    <p v-if=\"loading\">正在获取详细信息，请稍候...</p>\r\n    <p v-else-if=\"detail\">{{ detail }}</p>\r\n    <p v-else>无法获取详细信息，请稍后重试。</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { sendMessageToGpt } from '@/api/chatWithGpt';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport default {\r\n  name: 'Detail',\r\n  props: {\r\n    title: String,\r\n    status: String,\r\n    value: String,\r\n  },\r\n  data() {\r\n    return {\r\n      detail: '',\r\n      loading: true,\r\n      sessionId: uuidv4(), // 生成新的 sessionId\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // 构建分析请求的消息\r\n      const message = `分析 ${this.title},目前状态${this.status},${this.title}值为${this.value}`;\r\n      // 调用 GPT API 进行分析\r\n      const response = await sendMessageToGpt(message, this.sessionId);\r\n      this.detail = response.data.content;\r\n      this.playAdvice(response.data.content);\r\n    } catch (error) {\r\n      console.error('获取详细信息时出错:', error);\r\n      this.detail = '获取详细信息时发生错误。';\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  },\r\n  methods: {\r\n    closeDetail() {\r\n      this.$emit('close');\r\n    },\r\n    playAdvice(text) {\r\n      // 检查浏览器是否支持 SpeechSynthesis\r\n      if ('speechSynthesis' in window) {\r\n        const utterance = new SpeechSynthesisUtterance(text);\r\n        utterance.lang = 'zh-CN'; // 设置语言为中文，如果需要其他语言可以修改\r\n        window.speechSynthesis.speak(utterance);\r\n      } else {\r\n        console.error('浏览器不支持 SpeechSynthesis');\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.detail-content {\r\n  padding: 20px;\r\n  font-size: 34px;\r\n  color: #333;\r\n  letter-spacing: 1px; /* 增加字间距 */\r\n  max-height: 80vh; /* 限制最大高度 */\r\n  overflow-y: auto;\r\n  position: relative; /* 确保关闭按钮的绝对定位正确 */\r\n}\r\n\r\n.detail-content h2 {\r\n  font-size: 34px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.detail-content p {\r\n  margin: 10px 0;\r\n  font-size: 34px;\r\n}\r\n\r\n.close-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 40px;\r\n  cursor: pointer;\r\n  color: #333;\r\n}\r\n</style>\r\n\r\n"],"mappings":"AAWA,SAAAA,gBAAA;AACA,SAAAC,EAAA,IAAAC,MAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,KAAA,EAAAC,MAAA;IACAC,MAAA,EAAAD,MAAA;IACAE,KAAA,EAAAF;EACA;EACAG,KAAA;IACA;MACAC,MAAA;MACAC,OAAA;MACAC,SAAA,EAAAV,MAAA;IACA;EACA;EACA,MAAAW,QAAA;IACA;MACA;MACA,MAAAC,OAAA,cAAAT,KAAA,aAAAE,MAAA,SAAAF,KAAA,UAAAG,KAAA;MACA;MACA,MAAAO,QAAA,SAAAf,gBAAA,CAAAc,OAAA,OAAAF,SAAA;MACA,KAAAF,MAAA,GAAAK,QAAA,CAAAN,IAAA,CAAAO,OAAA;MACA,KAAAC,UAAA,CAAAF,QAAA,CAAAN,IAAA,CAAAO,OAAA;IACA,SAAAE,KAAA;MACAC,OAAA,CAAAD,KAAA,eAAAA,KAAA;MACA,KAAAR,MAAA;IACA;MACA,KAAAC,OAAA;IACA;EACA;EACAS,OAAA;IACAC,YAAA;MACA,KAAAC,KAAA;IACA;IACAL,WAAAM,IAAA;MACA;MACA,yBAAAC,MAAA;QACA,MAAAC,SAAA,OAAAC,wBAAA,CAAAH,IAAA;QACAE,SAAA,CAAAE,IAAA;QACAH,MAAA,CAAAI,eAAA,CAAAC,KAAA,CAAAJ,SAAA;MACA;QACAN,OAAA,CAAAD,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}