{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FooterComponent from '@/views/FooterComponent.vue';\nimport HeaderComponent from '@/views/HeaderComponent.vue';\nimport smartwatch from '@/assets/SportsGuide/smartwatch.png';\nimport bloodpressure from '@/assets/SportsGuide/bloodpressure.png';\nimport medicinebox from '@/assets/SportsGuide/medicinebox.png';\nimport thermometer from '../../assets/Sports/SportsGuide/thermometer.png';\nexport default {\n  name: 'HealthInfo',\n  components: {\n    HeaderComponent,\n    FooterComponent\n  },\n  data() {\n    return {\n      selectedType: 'day',\n      selectedTime: null,\n      timeOptions: [],\n      chartData: [],\n      xLabels: [],\n      bpmRange: '',\n      dailyData: {\n        // 每天心率数据按小时分，举例\n        '2024-09-01': [70, 65, 60, 75, 62, 68, 72, 70],\n        '2024-09-02': [68, 62, 66, 70, 65, 62, 64, 70]\n        // 更多数据...\n      },\n      monthlyData: {\n        // 每月心率数据按天分，每三天一次，举例\n        '2024-01': [65, 66, 70, 64, 72, 68, 70],\n        '2024-02': [64, 63, 65, 67, 68, 66, 70]\n        // 更多数据...\n      },\n      selectedYear: null,\n      availableYears: [2023, 2024],\n      months: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n      yearChartData: [],\n      // 替代 chartData\n      yearTooltipText: '',\n      // 替代 tooltipText\n      showDeviceModal: false,\n      selectedDevice: null,\n      connecting: false,\n      connectionProgress: 0,\n      devices: ['智能手表', '血压计', '智能药盒', '体温计'],\n      operationType: '',\n      // 用于区分当前操作的类型\n      deviceStatus: {\n        // 管理设备连接状态，true 表示连接，false 表示未连接\n        '智能手表': false,\n        '血压计': false,\n        '智能药盒': false,\n        '体温计': false\n      }\n    };\n  },\n  mounted() {\n    this.onTypeChange();\n    this.selectedYear = this.availableYears[0]; // 默认选择第一个年份\n    this.handleYearChange(); // 初始化数据\n    this.onTypeChange();\n    this.selectedYear = this.availableYears[0];\n    this.handleYearChange();\n  },\n  methods: {\n    navigateToGroup() {\n      this.$router.push('/group'); // 替换为你想要的路由路径\n    },\n    navigateToAI() {\n      this.$router.push('/AI'); // 替换为你想要的路由路径\n    },\n    onTypeChange() {\n      if (this.selectedType === 'day') {\n        this.timeOptions = Object.keys(this.dailyData).map(date => ({\n          value: date,\n          text: date\n        }));\n      } else if (this.selectedType === 'month') {\n        this.timeOptions = Object.keys(this.monthlyData).map(month => ({\n          value: month,\n          text: month\n        }));\n      }\n      this.selectedTime = this.timeOptions[0].value;\n      this.updateChart();\n      this.updateXLabels(); // 更新横坐标标签\n    },\n    getDotColor(device) {\n      return this.deviceStatus[device] ? '#4CAF50' : '#f06868'; // 连接状态为 true 时显示绿色，否则显示红色\n    },\n    openDeviceModal(operationType) {\n      this.showDeviceModal = true;\n      this.selectedDevice = null;\n      this.connecting = false;\n      this.connectionProgress = 0;\n      this.operationType = operationType; // 设置当前的操作类型\n    },\n    selectDevice(device) {\n      this.selectedDevice = device;\n      this.startOperation();\n    },\n    startOperation() {\n      this.connecting = true;\n      const interval = setInterval(() => {\n        if (this.connectionProgress < 100) {\n          this.connectionProgress += 20; // 每秒进度增加20%\n        } else {\n          clearInterval(interval);\n          setTimeout(() => {\n            if (this.operationType === 'connect') {\n              this.deviceStatus[this.selectedDevice] = true; // 连接成功，将状态设置为 true\n            } else if (this.operationType === 'disconnect') {\n              this.deviceStatus[this.selectedDevice] = false; // 解除连接成功，将状态设置为 false\n            }\n            this.closeDeviceModal(); // 在操作成功后自动关闭弹窗\n          }, 1000); // 1秒后关闭弹窗\n        }\n      }, 1000);\n    },\n    closeDeviceModal() {\n      this.showDeviceModal = false;\n    },\n    getDeviceImage(device) {\n      const images = {\n        '智能手表': smartwatch,\n        '血压计': bloodpressure,\n        '智能药盒': medicinebox,\n        '体温计': thermometer\n      };\n      return images[device];\n    },\n    getActionText() {\n      const actionTexts = {\n        connect: '正在连接',\n        disconnect: '正在解除',\n        sync: '正在同步',\n        update: '正在检查更新'\n      };\n      return actionTexts[this.operationType];\n    },\n    getSuccessText() {\n      const successTexts = {\n        connect: '连接成功',\n        disconnect: '解除成功',\n        sync: '同步成功',\n        update: '当前已是最新版本'\n      };\n      return successTexts[this.operationType];\n    },\n    getModalTitle() {\n      const titles = {\n        connect: '请选择要连接的设备',\n        disconnect: '请选择要解除连接的设备',\n        sync: '请选择要同步记录的设备',\n        update: '请选择要检查更新的设备'\n      };\n      return titles[this.operationType];\n    },\n    showTooltipForSteps(value, event) {\n      const tooltip = event.target.querySelector('.tooltip');\n      tooltip.style.visibility = 'visible';\n      tooltip.style.opacity = '1';\n      const offsetX = 15; // 向右偏移量\n      const offsetY = 15; // 向下偏移量\n\n      tooltip.style.position = 'fixed';\n      tooltip.style.top = `${event.clientY + offsetY}px`;\n      tooltip.style.left = `${event.clientX + offsetX}px`;\n\n      // 计算步数/天的值\n      const stepsPerDay = value / 100 * 5000;\n      tooltip.innerHTML = `${stepsPerDay.toFixed(0)} 步/天`; // 显示步数/天\n    },\n    hideTooltip(event) {\n      const tooltip = event.target.querySelector('.tooltip');\n      tooltip.style.visibility = 'hidden';\n      tooltip.style.opacity = '0';\n    },\n    showTooltipForHeartRate(value, event) {\n      const tooltip = event.target.querySelector('.tooltip');\n      tooltip.style.visibility = 'visible';\n      tooltip.style.opacity = '1';\n      const offsetX = 15; // 向右偏移量\n      const offsetY = 15; // 向下偏移量\n\n      tooltip.style.position = 'fixed';\n      tooltip.style.top = `${event.clientY + offsetY}px`;\n      tooltip.style.left = `${event.clientX + offsetX}px`;\n      tooltip.innerHTML = `${value} BPM`; // 显示 BPM 值\n    },\n    hideTooltip(event) {\n      const tooltip = event.target.querySelector('.tooltip');\n      tooltip.style.visibility = 'hidden';\n      tooltip.style.opacity = '0';\n    },\n    handleYearChange() {\n      if (this.selectedYear) {\n        this.yearChartData = this.fetchChartDataForYear(this.selectedYear);\n        this.yearTooltipText = this.fetchTooltipTextForYear(this.selectedYear);\n      }\n    },\n    fetchChartDataForYear(year) {\n      // 模拟不同年份的数据，可以根据实际数据来源来修改\n      const data = {\n        2023: [20, 40, 60, 80, 50, 30, 40, 60, 50, 70, 60, 50],\n        2024: [50, 70, 90, 30, 40, 60, 80, 20, 40, 50, 70, 60]\n      };\n      return data[year] || [];\n    },\n    fetchTooltipTextForYear(year) {\n      // 根据年份返回相应的提示文本\n      const tooltipData = {\n        2023: '5月~6月: 2,100步 / 天',\n        2024: '5月~6月: 3,000步 / 天'\n      };\n      return tooltipData[year] || '';\n    },\n    updateChart() {\n      if (this.selectedType === 'day') {\n        this.chartData = this.dailyData[this.selectedTime];\n      } else if (this.selectedType === 'month') {\n        this.chartData = this.monthlyData[this.selectedTime];\n      }\n      this.updateBpmRange();\n    },\n    updateXLabels() {\n      if (this.selectedType === 'day') {\n        this.xLabels = ['0:00', '3:00', '6:00', '9:00', '12:00', '15:00', '18:00', '21:00']; // 0:00 到 21:00\n      } else if (this.selectedType === 'month') {\n        this.xLabels = ['1日', '6日', '11日', '16日', '21日', '26日', '31日']; // 每隔5天一次\n      }\n    },\n    updateBpmRange() {\n      if (this.chartData.length > 0) {\n        const minBpm = Math.min(...this.chartData);\n        const maxBpm = Math.max(...this.chartData);\n        this.bpmRange = `${minBpm}~${maxBpm} BPM`;\n      } else {\n        this.bpmRange = '';\n      }\n    },\n    showTooltip(value, event) {\n      const tooltip = event.target.querySelector('.tooltip');\n      tooltip.style.visibility = 'visible';\n      tooltip.style.opacity = '1';\n\n      // 使用 fixed 定位，确保 tooltip 相对于视窗的位置固定\n      const offsetX = 15; // 向右偏移量\n      const offsetY = 15; // 向下偏移量\n\n      tooltip.style.position = 'fixed'; // 使用固定定位\n      tooltip.style.top = `${event.clientY + offsetY}px`;\n      tooltip.style.left = `${event.clientX + offsetX}px`;\n      tooltip.innerHTML = value + (this.selectedType === 'day' ? ' BPM' : ' 步');\n    },\n    hideTooltip(event) {\n      const tooltip = event.target.querySelector('.tooltip');\n      tooltip.style.visibility = 'hidden';\n      tooltip.style.opacity = '0';\n    }\n  }\n};","map":{"version":3,"names":["FooterComponent","HeaderComponent","smartwatch","bloodpressure","medicinebox","thermometer","name","components","data","selectedType","selectedTime","timeOptions","chartData","xLabels","bpmRange","dailyData","monthlyData","selectedYear","availableYears","months","yearChartData","yearTooltipText","showDeviceModal","selectedDevice","connecting","connectionProgress","devices","operationType","deviceStatus","mounted","onTypeChange","handleYearChange","methods","navigateToGroup","$router","push","navigateToAI","Object","keys","map","date","value","text","month","updateChart","updateXLabels","getDotColor","device","openDeviceModal","selectDevice","startOperation","interval","setInterval","clearInterval","setTimeout","closeDeviceModal","getDeviceImage","images","getActionText","actionTexts","connect","disconnect","sync","update","getSuccessText","successTexts","getModalTitle","titles","showTooltipForSteps","event","tooltip","target","querySelector","style","visibility","opacity","offsetX","offsetY","position","top","clientY","left","clientX","stepsPerDay","innerHTML","toFixed","hideTooltip","showTooltipForHeartRate","fetchChartDataForYear","fetchTooltipTextForYear","year","tooltipData","updateBpmRange","length","minBpm","Math","min","maxBpm","max","showTooltip"],"sources":["src/views/SportsGuide/Sport.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"container\">\n      <!-- 第一模块: 问候和天气 -->\n      <div class=\"module greeting\">\n        <div>\n          <p style=\"font-weight: bold;font-size: 20px;\">你好，李奶奶！</p>\n          <p>今天也要坚持运动哦~</p>\n        </div>\n\n        <div class=\"weather-container\">\n          <img src=\"@/assets/Sports/SportsGuide/sun.png\" alt=\"Sunny\" class=\"weather-icon\">\n          <span>晴，29°C</span>\n        </div>\n      </div>\n\n      <!-- 第二模块: 心率 -->\n      <div class=\"module1 heart-rate-module\">\n        <div class=\"header\">\n          <span class=\"heart-rate-title\">心率</span>\n          <span class=\"bpm-range\">{{ bpmRange }}</span>\n        </div>\n\n        <div>\n          <!-- 下拉选择框 -->\n          <select v-model=\"selectedType\" @change=\"onTypeChange\" class=\"custom-select\">\n            <option value=\"day\">每天</option>\n            <option value=\"month\">每月</option>\n          </select>\n\n          <select v-model=\"selectedTime\" @change=\"updateChart\" class=\"custom-select\">\n            <option v-for=\"option in timeOptions\" :key=\"option.value\" :value=\"option.value\">\n              {{ option.text }}\n            </option>\n          </select>\n        </div>\n\n        <div class=\"chart-container\">\n          <div class=\"y-axis-heart-rate\">\n            <div>90 BPM</div>\n            <div>72 BPM</div>\n            <div>36 BPM</div>\n            <div>0 BPM</div>\n          </div>\n          <div class=\"bar-chart-container\">\n            <div class=\"bar-chart\">\n              <div\n                  v-for=\"(bar, index) in chartData\"\n                  :key=\"index\"\n                  class=\"bar\"\n                  :style=\"{ height: bar + '%' }\"\n                  @mouseover=\"showTooltipForHeartRate(bar, $event)\"\n                  @mouseleave=\"hideTooltip\"\n              >\n                <div class=\"tooltip\">{{ bar }} BPM</div>\n              </div>\n            </div>\n            <div class=\"x-axis\">\n              <span v-for=\"label in xLabels\" :key=\"label\" :class=\"{ 'tilted-label': selectedType === 'day' }\">\n                {{ label }}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 第三模块: 数据统计 -->\n      <div class=\"module4 data-statistics-module\">\n        <div class=\"statistics-header\">\n          <span class=\"statistics-title\">数据统计（平均步数/天）</span>\n          <select class=\"year-selector\" v-model=\"selectedYear\" @change=\"handleYearChange\">\n            <option selected disabled>选择年份</option>\n            <option v-for=\"year in availableYears\" :key=\"year\">{{ year }}</option>\n          </select>\n        </div>\n        <div class=\"chart-container\">\n          <div class=\"y-axis\">\n            <div>5K</div>\n            <div>4K</div>\n            <div>3K</div>\n            <div>2K</div>\n            <div>1K</div>\n          </div>\n          <div class=\"bar-chart-container\">\n            <div class=\"bar1-chart\">\n              <div\n                  v-for=\"(height, index) in yearChartData\"\n                  :key=\"index\"\n                  class=\"bar1\"\n                  :style=\"{ height: height + '%' }\"\n                  @mouseover=\"showTooltipForSteps(height, $event)\"\n                  @mouseleave=\"hideTooltip\"\n              >\n                <div class=\"tooltip\">{{ height }} 步</div>\n              </div>\n            </div>\n            <div class=\"x-axis\">\n              <div v-for=\"(month, index) in months\" :key=\"index\">{{ month }}</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"tooltip\">{{ selectedYear }}: {{ yearTooltipText }}</div>\n      </div>\n\n      <!-- 第四模块: 加入运动小组 -->\n      <div class=\"module join-sports-group\">\n        <div class=\"profile-pics\">\n          <img src=\"@/assets/Sports/SportsGuide/person1.png\" alt=\"Person 1\" class=\"profile-pic\">\n          <img src=\"@/assets/Sports/SportsGuide/person2.png\" alt=\"Person 2\" class=\"profile-pic\">\n          <img src=\"@/assets/Sports/SportsGuide/person3.png\" alt=\"Person 3\" class=\"profile-pic\">\n        </div>\n        <a href=\"#\" class=\"join-link\" @click.prevent=\"navigateToGroup\">加入运动小组 ></a>\n      </div>\n\n      <!-- 第五模块: AI运动分析与建议 -->\n      <div class=\"module ai-analysis\">\n        <a href=\"#\" class=\"aai-link\" @click.prevent=\"navigateToAI\">AI运动分析与建议 ></a>\n      </div>\n\n      <!-- 右边第一模块: 设备概览 -->\n      <div class=\"module2 device-overview\">\n        <div class=\"device\">\n          <img src=\"@/assets/Sports/SportsGuide/smartwatch.png\" alt=\"智能手表\">\n          <p>智能手表</p>\n          <div class=\"status-dot-smartwatch\" :style=\"{ backgroundColor: getDotColor('智能手表') }\"></div>\n        </div>\n        <div class=\"device\">\n          <img src=\"@/assets/Sports/SportsGuide/bloodpressure.png\" alt=\"血压计\">\n          <p>血压计</p>\n          <div class=\"status-dot-bloodpressure\" :style=\"{ backgroundColor: getDotColor('血压计') }\"></div>\n        </div>\n        <div class=\"device\">\n          <img src=\"@/assets/Sports/SportsGuide/medicinebox.png\" alt=\"智能药盒\">\n          <p>智能药盒</p>\n          <div class=\"status-dot-medicinebox\" :style=\"{ backgroundColor: getDotColor('智能药盒') }\"></div>\n        </div>\n        <div class=\"device\">\n          <img src=\"@/assets/Sports/SportsGuide/thermometer.png\" alt=\"体温计\">\n          <p>体温计</p>\n          <div class=\"status-dot-thermometer\" :style=\"{ backgroundColor: getDotColor('体温计') }\"></div>\n        </div>\n      </div>\n\n\n      <!-- 右边第二模块: 设备管理 -->\n      <div class=\"modulede device-management\">\n        <div class=\"menu-item active\">设备连接</div>\n        <div class=\"menu-item \" @click=\"openDeviceModal('connect')\">设备连接 ></div>\n        <div class=\"menu-item\" @click=\"openDeviceModal('disconnect')\">解除设备连接 ></div>\n        <div class=\"menu-item\" @click=\"openDeviceModal('sync')\">同步记录 ></div>\n        <div class=\"menu-item\" @click=\"openDeviceModal('update')\">检查设备更新 ></div>\n\n\n        <div v-if=\"showDeviceModal\" class=\"device-modal\">\n          <div class=\"modal-content\">\n            <h3 class=\"modal-title\">{{ getModalTitle() }}</h3>\n\n            <ul>\n              <li\n                  v-for=\"device in devices\"\n                  :key=\"device\"\n                  @click=\"selectDevice(device)\"\n                  :class=\"['device-item', { 'highlighted': selectedDevice === device }]\"\n              >\n                {{ device }}\n              </li>\n\n            </ul>\n            <div v-if=\"selectedDevice\">\n              <img :src=\"getDeviceImage(selectedDevice)\" alt=\"设备图片\" class=\"device-image\">\n              <div class=\"progress-bar\">\n                <div class=\"progress\" :style=\"{ width: connectionProgress + '%' }\"></div>\n              </div>\n              <p>{{ connectionProgress < 100 ? getActionText() : getSuccessText() }}</p>\n            </div>\n          </div>\n        </div>\n\n\n\n\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FooterComponent from '@/views/FooterComponent.vue';\nimport HeaderComponent from '@/views/HeaderComponent.vue';\nimport smartwatch from '@/assets/SportsGuide/smartwatch.png';\nimport bloodpressure from '@/assets/SportsGuide/bloodpressure.png';\nimport medicinebox from '@/assets/SportsGuide/medicinebox.png';\nimport thermometer from '../../assets/Sports/SportsGuide/thermometer.png';\n\nexport default {\n  name: 'HealthInfo',\n  components: {\n    HeaderComponent,\n    FooterComponent,\n  },\n  data() {\n    return {\n      selectedType: 'day',\n      selectedTime: null,\n      timeOptions: [],\n      chartData: [],\n      xLabels: [],\n      bpmRange: '',\n      dailyData: {\n        // 每天心率数据按小时分，举例\n        '2024-09-01': [70, 65, 60, 75, 62, 68, 72, 70],\n        '2024-09-02': [68, 62, 66, 70, 65, 62, 64, 70],\n        // 更多数据...\n      },\n      monthlyData: {\n        // 每月心率数据按天分，每三天一次，举例\n        '2024-01': [65, 66, 70, 64, 72, 68, 70],\n        '2024-02': [64, 63, 65, 67, 68, 66, 70],\n        // 更多数据...\n      },\n      selectedYear: null,\n      availableYears: [2023, 2024],\n      months: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月','10月','11月','12月'],\n      yearChartData: [],  // 替代 chartData\n      yearTooltipText: '', // 替代 tooltipText\n      showDeviceModal: false,\n      selectedDevice: null,\n      connecting: false,\n      connectionProgress: 0,\n      devices: ['智能手表', '血压计', '智能药盒', '体温计'],\n      operationType: '', // 用于区分当前操作的类型\n      deviceStatus: { // 管理设备连接状态，true 表示连接，false 表示未连接\n        '智能手表': false,\n        '血压计': false,\n        '智能药盒': false,\n        '体温计': false,\n      }\n\n    };\n  },\n  mounted() {\n    this.onTypeChange();\n    this.selectedYear = this.availableYears[0]; // 默认选择第一个年份\n    this.handleYearChange(); // 初始化数据\n    this.onTypeChange();\n    this.selectedYear = this.availableYears[0];\n    this.handleYearChange();\n  },\n  methods: {\n    navigateToGroup() {\n      this.$router.push('/group'); // 替换为你想要的路由路径\n    },\n    navigateToAI() {\n      this.$router.push('/AI'); // 替换为你想要的路由路径\n    },\n    onTypeChange() {\n      if (this.selectedType === 'day') {\n        this.timeOptions = Object.keys(this.dailyData).map((date) => ({\n          value: date,\n          text: date,\n        }));\n      } else if (this.selectedType === 'month') {\n        this.timeOptions = Object.keys(this.monthlyData).map((month) => ({\n          value: month,\n          text: month,\n        }));\n      }\n      this.selectedTime = this.timeOptions[0].value;\n      this.updateChart();\n      this.updateXLabels(); // 更新横坐标标签\n    },\n    getDotColor(device) {\n      return this.deviceStatus[device] ? '#4CAF50' : '#f06868'; // 连接状态为 true 时显示绿色，否则显示红色\n    },\n    openDeviceModal(operationType) {\n      this.showDeviceModal = true;\n      this.selectedDevice = null;\n      this.connecting = false;\n      this.connectionProgress = 0;\n      this.operationType = operationType; // 设置当前的操作类型\n    },\n    selectDevice(device) {\n      this.selectedDevice = device;\n      this.startOperation();\n    },\n    startOperation() {\n      this.connecting = true;\n      const interval = setInterval(() => {\n        if (this.connectionProgress < 100) {\n          this.connectionProgress += 20; // 每秒进度增加20%\n        } else {\n          clearInterval(interval);\n          setTimeout(() => {\n            if (this.operationType === 'connect') {\n              this.deviceStatus[this.selectedDevice] = true; // 连接成功，将状态设置为 true\n            } else if (this.operationType === 'disconnect') {\n              this.deviceStatus[this.selectedDevice] = false; // 解除连接成功，将状态设置为 false\n            }\n            this.closeDeviceModal(); // 在操作成功后自动关闭弹窗\n          }, 1000); // 1秒后关闭弹窗\n        }\n      }, 1000);\n    },\n\n    closeDeviceModal() {\n      this.showDeviceModal = false;\n    },\n    getDeviceImage(device) {\n      const images = {\n        '智能手表': smartwatch,\n        '血压计': bloodpressure,\n        '智能药盒': medicinebox,\n        '体温计': thermometer,\n      };\n      return images[device];\n    },\n    getActionText() {\n      const actionTexts = {\n        connect: '正在连接',\n        disconnect: '正在解除',\n        sync: '正在同步',\n        update: '正在检查更新',\n      };\n      return actionTexts[this.operationType];\n    },\n    getSuccessText() {\n      const successTexts = {\n        connect: '连接成功',\n        disconnect: '解除成功',\n        sync: '同步成功',\n        update: '当前已是最新版本',\n      };\n      return successTexts[this.operationType];\n    },\n    getModalTitle() {\n      const titles = {\n        connect: '请选择要连接的设备',\n        disconnect: '请选择要解除连接的设备',\n        sync: '请选择要同步记录的设备',\n        update: '请选择要检查更新的设备',\n      };\n      return titles[this.operationType];\n    },\n    showTooltipForSteps(value, event) {\n      const tooltip = event.target.querySelector('.tooltip');\n      tooltip.style.visibility = 'visible';\n      tooltip.style.opacity = '1';\n\n      const offsetX = 15; // 向右偏移量\n      const offsetY = 15; // 向下偏移量\n\n      tooltip.style.position = 'fixed';\n      tooltip.style.top = `${event.clientY + offsetY}px`;\n      tooltip.style.left = `${event.clientX + offsetX}px`;\n\n      // 计算步数/天的值\n      const stepsPerDay = (value / 100) * 5000;\n      tooltip.innerHTML = `${stepsPerDay.toFixed(0)} 步/天`; // 显示步数/天\n    },\n    hideTooltip(event) {\n      const tooltip = event.target.querySelector('.tooltip');\n      tooltip.style.visibility = 'hidden';\n      tooltip.style.opacity = '0';\n    },\n    showTooltipForHeartRate(value, event) {\n      const tooltip = event.target.querySelector('.tooltip');\n      tooltip.style.visibility = 'visible';\n      tooltip.style.opacity = '1';\n\n      const offsetX = 15; // 向右偏移量\n      const offsetY = 15; // 向下偏移量\n\n      tooltip.style.position = 'fixed';\n      tooltip.style.top = `${event.clientY + offsetY}px`;\n      tooltip.style.left = `${event.clientX + offsetX}px`;\n\n      tooltip.innerHTML = `${value} BPM`; // 显示 BPM 值\n    },\n    hideTooltip(event) {\n      const tooltip = event.target.querySelector('.tooltip');\n      tooltip.style.visibility = 'hidden';\n      tooltip.style.opacity = '0';\n    },\n    handleYearChange() {\n      if (this.selectedYear) {\n        this.yearChartData = this.fetchChartDataForYear(this.selectedYear);\n        this.yearTooltipText = this.fetchTooltipTextForYear(this.selectedYear);\n      }\n    },\n    fetchChartDataForYear(year) {\n      // 模拟不同年份的数据，可以根据实际数据来源来修改\n      const data = {\n        2023: [20, 40, 60, 80, 50, 30, 40, 60, 50,70,60,50],\n        2024: [50, 70, 90, 30, 40, 60, 80, 20, 40,50,70,60],\n      };\n      return data[year] || [];\n    },\n    fetchTooltipTextForYear(year) {\n      // 根据年份返回相应的提示文本\n      const tooltipData = {\n        2023: '5月~6月: 2,100步 / 天',\n        2024: '5月~6月: 3,000步 / 天',\n      };\n      return tooltipData[year] || '';\n    },\n    updateChart() {\n      if (this.selectedType === 'day') {\n        this.chartData = this.dailyData[this.selectedTime];\n      } else if (this.selectedType === 'month') {\n        this.chartData = this.monthlyData[this.selectedTime];\n      }\n      this.updateBpmRange();\n    },\n    updateXLabels() {\n      if (this.selectedType === 'day') {\n        this.xLabels = [\n          '0:00',\n          '3:00',\n          '6:00',\n          '9:00',\n          '12:00',\n          '15:00',\n          '18:00',\n          '21:00',\n        ]; // 0:00 到 21:00\n      } else if (this.selectedType === 'month') {\n        this.xLabels = ['1日', '6日', '11日', '16日', '21日', '26日', '31日']; // 每隔5天一次\n      }\n    },\n    updateBpmRange() {\n      if (this.chartData.length > 0) {\n        const minBpm = Math.min(...this.chartData);\n        const maxBpm = Math.max(...this.chartData);\n        this.bpmRange = `${minBpm}~${maxBpm} BPM`;\n      } else {\n        this.bpmRange = '';\n      }\n    },\n    showTooltip(value, event) {\n      const tooltip = event.target.querySelector('.tooltip');\n      tooltip.style.visibility = 'visible';\n      tooltip.style.opacity = '1';\n\n      // 使用 fixed 定位，确保 tooltip 相对于视窗的位置固定\n      const offsetX = 15; // 向右偏移量\n      const offsetY = 15; // 向下偏移量\n\n      tooltip.style.position = 'fixed'; // 使用固定定位\n      tooltip.style.top = `${event.clientY + offsetY}px`;\n      tooltip.style.left = `${event.clientX + offsetX}px`;\n\n      tooltip.innerHTML = value + (this.selectedType === 'day' ? ' BPM' : ' 步');\n    },\n    hideTooltip(event) {\n      const tooltip = event.target.querySelector('.tooltip');\n      tooltip.style.visibility = 'hidden';\n      tooltip.style.opacity = '0';\n    },\n  },\n};\n</script>\n\n<style scoped>\n#app {\n  width: 100%;\n  height: 100%;\n  margin: 0 auto;\n  background-color: #ffe9e9;\n\n  font-family: Arial, sans-serif;\n}\n\n.container {\n  height: 1000px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #ffe9e9;\n  padding: 20px;\n}\n.custom-select {\n  position: relative;\n  top: -35px; /* 向上移动10px */\n  border-radius: 15px; /* 设置圆角矩形 */\n  background-color: #f0b8b8; /* 设置背景颜色为橙色 */\n  color: white; /* 设置文本颜色 */\n  border: none; /* 去除默认边框 */\n\n  font-size: 12px; /* 设置字体大小 */\n  appearance: none; /* 去除默认的浏览器外观 */\n  -webkit-appearance: none; /* 去除Webkit浏览器的默认外观 */\n  -moz-appearance: none; /* 去除Mozilla浏览器的默认外观 */\n  cursor: pointer; /* 鼠标悬停时显示为指针 */\n  text-align: center; /* 文本左右居中 */\n  width: 80px; /* 设置宽度为容器的100% */\n  height: 30px;\n}\n.modal-title {\n  display: inline-block;\n  background-color: #f18585; /* 设置背景颜色 */\n  padding: 10px 20px; /* 添加内边距 */\n  border-radius: 15px; /* 设置圆角 */\n  font-size: 1.2em; /* 字体大小 */\n  font-weight: bold; /* 字体加粗 */\n  margin-bottom: 20px; /* 与下方内容的间距 */\n  color: #333; /* 文本颜色 */\n}\n.device-item {\n  display: block; /* 确保设备名称竖着排列 */\n  background-color: #e0e0e0; /* 设置设备名称背景颜色 */\n  padding: 8px 15px; /* 添加内边距 */\n  border-radius: 10px; /* 设置圆角 */\n  font-size: 1em; /* 字体大小 */\n  margin-bottom: 10px; /* 与下方内容的间距 */\n  color: #333; /* 文本颜色 */\n  cursor: pointer; /* 鼠标指针变为手型 */\n  transition: background-color 0.3s; /* 背景颜色过渡效果 */\n}\n\n.device-item:hover {\n  background-color: #d0d0d0; /* 悬停时的背景颜色 */\n}\n\n.highlighted {\n  background-color: #f0b8b8; /* 黄色背景以高亮显示 */\n  color: #333; /* 改变文本颜色以适应高亮背景 */\n  border-radius: 5px; /* 可选：添加圆角 */\n  padding: 5px 10px; /* 可选：增加内边距 */\n}\n\n.custom-select:focus {\n  outline: none; /* 去除点击时的默认高亮边框 */\n  box-shadow: 0 0 5px rgba(255, 165, 0, 0.5); /* 可选：添加点击时的阴影效果 */\n}\n\n.custom-select option {\n  background-color: #ffffff; /* 下拉选项的背景色 */\n  color: #333; /* 下拉选项的文字颜色 */\n}\n\n\n.y-axis-heart-rate {\n  width: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 110px; /* 纵轴的高度 */\n  margin-right: 20px; /* 调整与条形图之间的距离 */\n  margin-left: -10px; /* 调整纵轴向左移动 */\n  color: #888;\n  font-size: 0.8em; /* 纵轴字体大小 */\n}\n\n.module {\n  background-color: #ffffff;\n  border-radius: 30px;\n  padding: 20px;\n  box-shadow: 0 4px 8px rgba(221, 37, 37, 0.1);\n  display: flex;\n  align-items: center; /* 模块内部元素垂直居中 */\n  justify-content: space-between; /* 模块内部元素水平分布 */\n}\n\n/* 特定模块的尺寸和位置调整 */\n.greeting {\n  position: relative;\n  left: -200px;\n  top: 50px;\n  width: 400px;\n}\n.device-modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #fff;\n  border-radius: 10px;\n  padding: 20px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  z-index: 1000; /* 确保在最上层 */\n  width: 300px;\n  text-align: center;\n}\n\n.modal-content h3 {\n  margin-bottom: 20px;\n}\n\n.modal-content ul {\n  list-style-type: none;\n  padding: 0;\n}\n\n.modal-content li {\n  margin-bottom: 10px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.modal-content li:hover {\n  color: #ffe9e9; /* 可选：悬停时的颜色 */\n}\n\n.device-image {\n  width: 80px;\n  height: 80px;\n  margin: 20px 0;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 10px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  margin-top: 20px;\n}\n\n.progress {\n  height: 100%;\n  background-color: #15a5be; /* 可选：进度条颜色 */\n  border-radius: 5px;\n  transition: width 1s ease-in-out;\n}\n\n.heart-rate-module {\n  position: relative;\n  left: -200px;\n  top: 80px;\n  width: 400px;\n  height: 200px;\n  background-image: url('@/assets/Sports/Heart.png');\n  background-size: 300px 300px;\n  background-repeat: no-repeat; /* 避免图片重复 */\n  background-position: 200px 50px;\n}\n\n.data-statistics-module {\n  position: relative;\n  left: -200px;\n  top: 110px;\n  width: 400px;\n}\n\n.join-sports-group {\n  position: relative;\n  left: -200px;\n  top: 140px;\n  width: 400px;\n  background-color: #f0b8b8;\n}\n\n.ai-analysis {\n  position: relative;\n  left: 250px;\n  top: 70px;\n  width: 300px;\n  background-image: url('@/assets/Sports/AI.png');\n  background-size: 50px 50px;\n  background-repeat: no-repeat; /* 避免图片重复 */\n  background-position: 20px center;\n}\n\n.module2 {\n  background-color: #ffffff;\n  border-radius: 30px;\n  padding: 20px;\n  box-shadow: 0 4px 8px rgba(240, 151, 151, 0.1);\n  display: grid;\n  grid-template-columns: repeat(2, 1fr); /* 两列，每列占据一半宽度 */\n  grid-gap: 20px; /* 网格项之间的间距 */\n}\n\n.aai-link {\n  display: inline-block; /* Ensures margin and padding adjustments are effective */\n  margin-left: 90px; /* Adjust the value as needed to move the text left */\n  font-weight: bold;\n  color: black;\n  text-decoration: none; /* Optional: to remove underline if there is any */\n}\n\n.device {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 120px; /* Adjust width as needed */\n  height: 120px; /* Adjust height as needed */\n  background-color: #ffe9e9; /* Background color of the rectangle */\n  border: 1px solid #e0e0e0; /* Border color and thickness */\n  border-radius: 15px; /* Rounded corners */\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Optional: for slight shadow */\n  margin: 10px; /* Space between each device */\n  padding: 10px; /* Space inside the rectangle */\n  text-align: center; /* Center text below the image */\n}\n\n.device img {\n  width: 80px;\n  height: 80px;\n}\n\n.device-overview {\n  position: relative;\n  left: 250px;\n  top: -800px;\n  width: 350px;\n  height: 350px;\n}\n\n.device-management {\n  position: relative;\n  left: 250px;\n  top: -750px;\n  width: 400px;\n}\n\n/* General styles for the module */\n.module4 {\n  background-color: #fff;\n  border-radius: 30px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  font-family: 'Arial', sans-serif;\n  width: 400px;\n}\n\n.statistics-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.statistics-title {\n  font-size: 1.2em;\n  font-weight: bold;\n}\n\n.month-selector {\n  background-color: #fcecec;\n  border: none;\n  border-radius: 5px;\n  padding: 5px 10px;\n  font-size: 1em;\n  color: #333;\n}\n\n.chart-container {\n  display: flex;\n  position: relative;\n}\n\n.y-axis {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 200px; /* Adjust as necessary */\n  margin-right: 30px; /* Reduced the margin-right value */\n  margin-left: -10px; /* Added margin-left to move it to the left */\n  color: #888;\n  font-size: 0.8em;\n}\n\n.bar-chart-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  width: 100%;\n}\n\n.bar1-chart {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  height: 200px; /* Adjust as necessary */\n  border-left: 1px solid #eee;\n  border-bottom: 1px solid #eee;\n  padding: 10px;\n  width: 100%;\n}\n\n.bar1 {\n  background-color: #fcbaba;\n  border-radius: 5px;\n  width: 20px; /* Adjust as necessary */\n  position: relative;\n}\n\n.bar1:hover + .tooltip,\n.bar1:hover::after {\n  visibility: visible;\n  opacity: 1;\n}\n\n.x-axis {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n  width: 100%;\n  padding-left: 10px;\n  font-size: 0.8em;\n  color: #888;\n}\n\n.x-axis div {\n  flex: 1;\n  text-align: center;\n}\n\n.tooltip {\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.7);\n  color: #fff;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 0.8em;\n  white-space: nowrap;\n  visibility: hidden;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  z-index: 1000; /* 确保 tooltip 显示在最上层 */\n}\n\n/* 其他元素的样式 */\n.weather-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.weather-icon,\n.profile-pic,\n.device img {\n  width: 80px;\n  height: 80px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 10px;\n}\n\n.module1 {\n  background-color: #f0f8ff; /* Light blue background color */\n  border-radius: 30px;\n  padding: 20px;\n  box-shadow: 0 4px 8px rgba(221, 37, 37, 0.1);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.heart-rate-title,\n.bpm-range {\n  font-size: 18px;\n  font-weight: bold; /* Make the text bold */\n}\n\n.bar-chart {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  width: 100%;\n  height: 100px; /* Adjust height as needed */\n  margin-top: 10px;\n}\n\n.bar {\n  width: 10px;\n  background-color: #00bfff; /* Deep Sky Blue */\n  margin: 0 2px;\n  border-radius: 5px; /* Make the bars have rounded corners */\n}\n\n.ai-link,\n.join-link {\n  font-weight: bold;\n  font-size: 16px;\n  text-decoration: none;\n  color: #333;\n}\n\n.device {\n  position: relative; /* 设置为相对定位 */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.menu-item {\n  font-size: 16px;\n  color: #333;\n  padding: 10px 20px;\n  border-bottom: 1px solid #eee;\n}\n\n.menu-item:last-child {\n  border-bottom: none;\n}\n\n.modulede {\n  background-color: #fff;\n  border-radius: 15px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  width: 200px; /* Adjust width as necessary */\n  font-family: 'Arial', sans-serif;\n}\n\n.menu-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 15px;\n  margin: 5px 0;\n  border-radius: 10px; /* Rounded corners */\n  font-size: 16px;\n  color: #333;\n  cursor: pointer;\n}\n\n.menu-item:hover {\n  background-color: #f2f2f2; /* Optional: highlight on hover */\n}\n\n.menu-item.active {\n  background-color: #fcecec; /* Background color for active item */\n  font-weight: bold; /* Make text bold */\n  color: #333; /* Text color */\n}\n.status-dot-smartwatch {\n  width: 10px;\n  height: 10px;\n\n  border-radius: 50%;\n  display: inline-block;\n  position: absolute; /* 绝对定位 */\n  top: 125px;\n  left: 70px;\n  z-index: 1000; /* 确保在所有元素上方 */\n}\n.status-dot-bloodpressure {\n  width: 10px;\n  height: 10px;\n\n  border-radius: 50%;\n  display: inline-block;\n  position: absolute; /* 绝对定位 */\n  top: 125px;\n  left: 70px;\n  z-index: 1000; /* 确保在所有元素上方 */\n}\n.status-dot-medicinebox {\n  width: 10px;\n  height: 10px;\n\n  border-radius: 50%;\n  display: inline-block;\n  position: absolute; /* 绝对定位 */\n  top: 125px;\n  left: 70px;\n  z-index: 1000; /* 确保在所有元素上方 */\n}\n.status-dot-thermometer {\n  width: 10px;\n  height: 10px;\n\n  border-radius: 50%;\n  display: inline-block;\n  position: absolute; /* 绝对定位 */\n  top: 125px;\n  left: 70px;\n  z-index: 1000; /* 确保在所有元素上方 */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}