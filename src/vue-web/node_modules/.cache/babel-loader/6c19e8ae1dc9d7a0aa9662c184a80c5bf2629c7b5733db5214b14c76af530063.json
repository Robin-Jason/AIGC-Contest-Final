{"ast":null,"code":"import { sendMessageToGpt } from '@/api/chatWithGpt';\nimport { v4 as uuidv4 } from 'uuid';\nexport default {\n  name: 'Advice',\n  data() {\n    return {\n      advice: '',\n      loading: true,\n      sessionId: uuidv4() // 生成新的 sessionId\n    };\n  },\n  async created() {\n    try {\n      // 从父组件获取病情信息\n      const profileCases = this.$parent.profileCases;\n      if (profileCases && profileCases.length > 0) {\n        // 调用 GPT API 进行分析\n        const response = await sendMessageToGpt(`分析病情: ${profileCases.join(', ')}`, this.sessionId);\n        this.advice = response.data.content;\n        this.playAdvice(response.data.content);\n      } else {\n        this.advice = '没有足够的病情信息进行分析。';\n      }\n    } catch (error) {\n      console.error('获取健康建议时出错:', error);\n      this.advice = '获取建议时发生错误。';\n    } finally {\n      this.loading = false;\n    }\n  },\n  methods: {\n    closeAdvice() {\n      if ('speechSynthesis' in window) {\n        window.speechSynthesis.cancel(); // 停止所有正在进行的语音合成\n      }\n      this.$emit('close');\n    },\n    playAdvice(text) {\n      // 检查浏览器是否支持 SpeechSynthesis\n      if ('speechSynthesis' in window) {\n        const utterance = new SpeechSynthesisUtterance(text);\n        utterance.lang = 'zh-CN'; // 设置语言为中文，如果需要其他语言可以修改\n        window.speechSynthesis.speak(utterance);\n      } else {\n        console.error('浏览器不支持 SpeechSynthesis');\n      }\n    }\n  }\n};","map":{"version":3,"names":["sendMessageToGpt","v4","uuidv4","name","data","advice","loading","sessionId","created","profileCases","$parent","length","response","join","content","playAdvice","error","console","methods","closeAdvice","window","speechSynthesis","cancel","$emit","text","utterance","SpeechSynthesisUtterance","lang","speak"],"sources":["src/views/Health/Advice.vue"],"sourcesContent":["<template>\r\n  <div class=\"advice-content\">\r\n    <button class=\"close-button\" @click=\"closeAdvice\">×</button>\r\n    <h2>健康生活建议</h2>\r\n    <p v-if=\"loading\">正在获取建议，请稍候...</p>\r\n    <p v-else-if=\"advice\">{{ advice }}</p>\r\n    <p v-else>无法获取建议，请稍后重试。</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { sendMessageToGpt } from '@/api/chatWithGpt';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default {\r\n  name: 'Advice',\r\n  data() {\r\n    return {\r\n      advice: '',\r\n      loading: true,\r\n      sessionId: uuidv4(), // 生成新的 sessionId\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // 从父组件获取病情信息\r\n      const profileCases = this.$parent.profileCases;\r\n      if (profileCases && profileCases.length > 0) {\r\n        // 调用 GPT API 进行分析\r\n        const response = await sendMessageToGpt(`分析病情: ${profileCases.join(', ')}`, this.sessionId);\r\n        this.advice = response.data.content;\r\n        this.playAdvice(response.data.content);\r\n      } else {\r\n        this.advice = '没有足够的病情信息进行分析。';\r\n      }\r\n    } catch (error) {\r\n      console.error('获取健康建议时出错:', error);\r\n      this.advice = '获取建议时发生错误。';\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  },\r\n  methods: {\r\n    closeAdvice() {\r\n      if ('speechSynthesis' in window) {\r\n        window.speechSynthesis.cancel(); // 停止所有正在进行的语音合成\r\n      }\r\n      this.$emit('close');\r\n    },\r\n    playAdvice(text) {\r\n      // 检查浏览器是否支持 SpeechSynthesis\r\n      if ('speechSynthesis' in window) {\r\n        const utterance = new SpeechSynthesisUtterance(text);\r\n        utterance.lang = 'zh-CN'; // 设置语言为中文，如果需要其他语言可以修改\r\n        window.speechSynthesis.speak(utterance);\r\n      } else {\r\n        console.error('浏览器不支持 SpeechSynthesis');\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.advice-content {\r\n  padding: 20px;\r\n  font-size: 34px;\r\n  color: #333;\r\n  letter-spacing: 1px; /* 增加字间距 */\r\n  max-height: 80vh; /* 限制最大高度 */\r\n  overflow-y: auto;\r\n  position: relative; /* 确保关闭按钮的绝对定位正确 */\r\n}\r\n\r\n.advice-content h2 {\r\n  font-size: 34px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.advice-content p {\r\n  margin: 10px 0;\r\n  font-size: 34px;\r\n}\r\n\r\n.close-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 40px;\r\n  cursor: pointer;\r\n  color: #333;\r\n}\r\n</style>\r\n"],"mappings":"AAWA,SAAAA,gBAAA;AACA,SAAAC,EAAA,IAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,OAAA;MACAC,SAAA,EAAAL,MAAA;IACA;EACA;EACA,MAAAM,QAAA;IACA;MACA;MACA,MAAAC,YAAA,QAAAC,OAAA,CAAAD,YAAA;MACA,IAAAA,YAAA,IAAAA,YAAA,CAAAE,MAAA;QACA;QACA,MAAAC,QAAA,SAAAZ,gBAAA,UAAAS,YAAA,CAAAI,IAAA,eAAAN,SAAA;QACA,KAAAF,MAAA,GAAAO,QAAA,CAAAR,IAAA,CAAAU,OAAA;QACA,KAAAC,UAAA,CAAAH,QAAA,CAAAR,IAAA,CAAAU,OAAA;MACA;QACA,KAAAT,MAAA;MACA;IACA,SAAAW,KAAA;MACAC,OAAA,CAAAD,KAAA,eAAAA,KAAA;MACA,KAAAX,MAAA;IACA;MACA,KAAAC,OAAA;IACA;EACA;EACAY,OAAA;IACAC,YAAA;MACA,yBAAAC,MAAA;QACAA,MAAA,CAAAC,eAAA,CAAAC,MAAA;MACA;MACA,KAAAC,KAAA;IACA;IACAR,WAAAS,IAAA;MACA;MACA,yBAAAJ,MAAA;QACA,MAAAK,SAAA,OAAAC,wBAAA,CAAAF,IAAA;QACAC,SAAA,CAAAE,IAAA;QACAP,MAAA,CAAAC,eAAA,CAAAO,KAAA,CAAAH,SAAA;MACA;QACAR,OAAA,CAAAD,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}