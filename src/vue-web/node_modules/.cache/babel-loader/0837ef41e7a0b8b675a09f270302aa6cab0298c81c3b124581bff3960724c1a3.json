{"ast":null,"code":"// import axios from 'axios';\n// import { getAccessToken } from '@/utils/auth'\n//\n// const service = axios.create({\n//   // baseURL: 'https://mock.apifox.cn/m1/2428381-0-default/admin-api',\n//   baseURL: '/api',\n//   timeout: 10000\n// });\n//\n// service.interceptors.request.use(\n//   config => {\n//     // 在请求发送之前对请求数据进行处理\n//     if (getAccessToken()) {\n//       config.headers['Authorization'] = 'Bearer ' + getAccessToken() // 携带token\n//     }\n//\n//     return config;\n//   },\n//   error => {\n//     // 对请求错误做些什么\n//     console.log(error);\n//     return Promise.reject(error);\n//   }\n// );\n//\n// service.interceptors.response.use(\n//   response => {\n//     // 对响应数据进行处理\n//     // ...\n//\n//     return response.data;\n//   },\n//   error => {\n//     // 对响应错误做些什么\n//     console.log(error);\n//     return Promise.reject(error);\n//   }\n// );\n//\n// export default service;","map":{"version":3,"names":[],"sources":["/Users/robin/Personal/AIGC/参赛作品/决赛作品/源代码/vue-web/src/utils/request.js"],"sourcesContent":["// import axios from 'axios';\n// import { getAccessToken } from '@/utils/auth'\n//\n// const service = axios.create({\n//   // baseURL: 'https://mock.apifox.cn/m1/2428381-0-default/admin-api',\n//   baseURL: '/api',\n//   timeout: 10000\n// });\n//\n// service.interceptors.request.use(\n//   config => {\n//     // 在请求发送之前对请求数据进行处理\n//     if (getAccessToken()) {\n//       config.headers['Authorization'] = 'Bearer ' + getAccessToken() // 携带token\n//     }\n//\n//     return config;\n//   },\n//   error => {\n//     // 对请求错误做些什么\n//     console.log(error);\n//     return Promise.reject(error);\n//   }\n// );\n//\n// service.interceptors.response.use(\n//   response => {\n//     // 对响应数据进行处理\n//     // ...\n//\n//     return response.data;\n//   },\n//   error => {\n//     // 对响应错误做些什么\n//     console.log(error);\n//     return Promise.reject(error);\n//   }\n// );\n//\n// export default service;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}