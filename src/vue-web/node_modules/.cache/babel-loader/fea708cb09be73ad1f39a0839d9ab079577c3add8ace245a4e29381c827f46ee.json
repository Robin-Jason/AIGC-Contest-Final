{"ast":null,"code":"import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport FooterComponent from '@/views/FooterComponent.vue';\nimport HeaderComponent from '@/views/HeaderComponent.vue';\nexport default {\n  name: 'HealthInfo',\n  data() {\n    return {\n      userPrompt: '',\n      // 用户输入的内容\n      analysisResult: '',\n      sessionId: uuidv4(),\n      // 在页面加载时生成一个唯一的sessionId\n      selectedHeartRateType: 'day',\n      selectedHeartRateTime: null,\n      heartRateTimeOptions: [],\n      selectedStepYear: null,\n      selectedStepMonth: null,\n      availableYears: [2023, 2024],\n      months: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n      dailyData: {\n        '2024-09-01': [70, 65, 60, 75, 62, 68, 72, 70],\n        '2024-09-02': [68, 62, 66, 70, 65, 62, 64, 70]\n        // 更多数据...\n      },\n      monthlyData: {\n        '2024-01': [65, 66, 70, 64, 72, 68, 70],\n        '2024-02': [64, 63, 65, 67, 68, 66, 70]\n        // 更多数据...\n      }\n    };\n  },\n  components: {\n    HeaderComponent,\n    FooterComponent\n  },\n  mounted() {\n    this.onHeartRateTypeChange();\n    this.selectedStepYear = this.availableYears[0]; // 默认选择第一个年份\n  },\n  methods: {\n    onHeartRateTypeChange() {\n      if (this.selectedHeartRateType === 'day') {\n        this.heartRateTimeOptions = Object.keys(this.dailyData).map(date => ({\n          value: date,\n          text: date\n        }));\n      } else if (this.selectedHeartRateType === 'month') {\n        this.heartRateTimeOptions = Object.keys(this.monthlyData).map(month => ({\n          value: month,\n          text: month\n        }));\n      }\n      this.selectedHeartRateTime = this.heartRateTimeOptions[0].value;\n    },\n    addHeartRateData() {\n      let heartRateData = '';\n      if (this.selectedHeartRateType === 'day') {\n        heartRateData = this.dailyData[this.selectedHeartRateTime].map((bpm, index) => {\n          return `${this.selectedHeartRateTime} 第${index + 1}小时的心率是${bpm} BPM`;\n        }).join('，');\n      } else if (this.selectedHeartRateType === 'month') {\n        heartRateData = this.monthlyData[this.selectedHeartRateTime].map((bpm, index) => {\n          return `${this.selectedHeartRateTime} 第${index * 5 + 1}日的心率是${bpm} BPM`;\n        }).join('，');\n      }\n      this.userPrompt += heartRateData + '。';\n    },\n    onStepYearChange() {\n      this.selectedStepMonth = \"all\"; // 默认选择“全部”\n    },\n    addStepData() {\n      if (this.selectedStepMonth === 'all') {\n        // 添加所有月份的步数数据\n        const allStepsData = this.months.map((month, index) => {\n          return `2024年${month}的平均步数是${this.fetchChartDataForYear(this.selectedStepYear)[index] * 50}步`;\n        }).join('，');\n        this.userPrompt += allStepsData + '。';\n      } else {\n        // 只添加选中的月份数据\n        const stepData = `2024年${this.months[this.selectedStepMonth - 1]}的平均步数是${this.fetchChartDataForYear(this.selectedStepYear)[this.selectedStepMonth - 1] * 50}步`;\n        this.userPrompt += stepData + '。';\n      }\n    },\n    fetchChartDataForYear(year) {\n      const data = {\n        2023: [20, 40, 60, 80, 50, 30, 40, 60, 50, 70, 60, 50],\n        2024: [50, 70, 90, 30, 40, 60, 80, 20, 40, 50, 70, 60]\n      };\n      return data[year] || [];\n    },\n    submitPrompt() {\n      const prompt = `${this.userPrompt}`;\n      const requestBody = {\n        content: prompt,\n        sessionId: this.sessionId\n      };\n      axios.post('/api/chat/send', requestBody).then(response => {\n        const responseData = response.data;\n        if (responseData && responseData.data && responseData.code === 0) {\n          this.analysisResult = responseData.data.content; // 显示从大语言模型返回的内容\n        } else {\n          console.error('接收到错误或格式无效:', responseData);\n          this.analysisResult = '接收到错误或格式无效';\n        }\n      }).catch(error => {\n        console.error('发送消息错误:', error);\n        this.analysisResult = `错误：${error.message || \"与服务器通信失败\"}`;\n      });\n    },\n    readAloud() {\n      if ('speechSynthesis' in window) {\n        const speech = new SpeechSynthesisUtterance(this.analysisResult);\n        speech.lang = 'zh-CN'; // 设置语言为中文\n        window.speechSynthesis.speak(speech);\n      } else {\n        alert('您的浏览器不支持语音合成功能');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","v4","uuidv4","FooterComponent","HeaderComponent","name","data","userPrompt","analysisResult","sessionId","selectedHeartRateType","selectedHeartRateTime","heartRateTimeOptions","selectedStepYear","selectedStepMonth","availableYears","months","dailyData","monthlyData","components","mounted","onHeartRateTypeChange","methods","Object","keys","map","date","value","text","month","addHeartRateData","heartRateData","bpm","index","join","onStepYearChange","addStepData","allStepsData","fetchChartDataForYear","stepData","year","submitPrompt","prompt","requestBody","content","post","then","response","responseData","code","console","error","catch","message","readAloud","window","speech","SpeechSynthesisUtterance","lang","speechSynthesis","speak","alert"],"sources":["src/views/SportsGuide/AI.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div class=\"containerAI\">\r\n      <!-- AI健康助手 -->\r\n      <div class=\"moduleAI AI-assistant\">\r\n        <!-- 心率数据选择 -->\r\n        <div class=\"data-selection\">\r\n          <div class=\"selection-row\">\r\n            <div class=\"label\">心率：</div>\r\n            <select v-model=\"selectedHeartRateType\" @change=\"onHeartRateTypeChange\" class=\"custom-select\">\r\n              <option value=\"day\">每天</option>\r\n              <option value=\"month\">每月</option>\r\n            </select>\r\n\r\n            <select v-model=\"selectedHeartRateTime\" class=\"custom-select\">\r\n              <option v-for=\"option in heartRateTimeOptions\" :key=\"option.value\" :value=\"option.value\">\r\n                {{ option.text }}\r\n              </option>\r\n            </select>\r\n\r\n            <button @click=\"addHeartRateData\" class=\"add-button\">添加</button>\r\n          </div>\r\n          <!-- 步数数据选择 -->\r\n          <div class=\"selection-row\">\r\n            <div class=\"label\">步数：</div>\r\n            <select v-model=\"selectedStepYear\" @change=\"onStepYearChange\" class=\"custom-select\">\r\n              <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">{{ year }}</option>\r\n            </select>\r\n\r\n            <select v-model=\"selectedStepMonth\" class=\"custom-select\">\r\n              <option value=\"all\">全部</option>\r\n              <option v-for=\"(month, index) in months\" :key=\"index\" :value=\"index + 1\">{{ month }}</option>\r\n            </select>\r\n\r\n            <button @click=\"addStepData\" class=\"add-button\">添加</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"input-container\">\r\n          <textarea v-model=\"userPrompt\" placeholder=\"请输入您的问题或聊天记录\"></textarea>\r\n          <button @click=\"submitPrompt\" class=\"submit-button\">提交</button>\r\n        </div>\r\n\r\n        <div class=\"result\">\r\n          <h2>分析结果</h2>\r\n          <textarea readonly v-model=\"analysisResult\"></textarea>\r\n          <button @click=\"readAloud\" class=\"read-button\">朗读</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport FooterComponent from '@/views/FooterComponent.vue';\r\nimport HeaderComponent from '@/views/HeaderComponent.vue';\r\n\r\nexport default {\r\n  name: 'HealthInfo',\r\n  data() {\r\n    return {\r\n      userPrompt: '', // 用户输入的内容\r\n      analysisResult: '',\r\n      sessionId: uuidv4(), // 在页面加载时生成一个唯一的sessionId\r\n      selectedHeartRateType: 'day',\r\n      selectedHeartRateTime: null,\r\n      heartRateTimeOptions: [],\r\n      selectedStepYear: null,\r\n      selectedStepMonth: null,\r\n      availableYears: [2023, 2024],\r\n      months: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\r\n      dailyData: {\r\n        '2024-09-01': [70, 65, 60, 75, 62, 68, 72, 70],\r\n        '2024-09-02': [68, 62, 66, 70, 65, 62, 64, 70],\r\n        // 更多数据...\r\n      },\r\n      monthlyData: {\r\n        '2024-01': [65, 66, 70, 64, 72, 68, 70],\r\n        '2024-02': [64, 63, 65, 67, 68, 66, 70],\r\n        // 更多数据...\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    HeaderComponent,\r\n    FooterComponent\r\n  },\r\n  mounted() {\r\n    this.onHeartRateTypeChange();\r\n    this.selectedStepYear = this.availableYears[0]; // 默认选择第一个年份\r\n  },\r\n  methods: {\r\n    onHeartRateTypeChange() {\r\n      if (this.selectedHeartRateType === 'day') {\r\n        this.heartRateTimeOptions = Object.keys(this.dailyData).map((date) => ({\r\n          value: date,\r\n          text: date,\r\n        }));\r\n      } else if (this.selectedHeartRateType === 'month') {\r\n        this.heartRateTimeOptions = Object.keys(this.monthlyData).map((month) => ({\r\n          value: month,\r\n          text: month,\r\n        }));\r\n      }\r\n      this.selectedHeartRateTime = this.heartRateTimeOptions[0].value;\r\n    },\r\n    addHeartRateData() {\r\n      let heartRateData = '';\r\n      if (this.selectedHeartRateType === 'day') {\r\n        heartRateData = this.dailyData[this.selectedHeartRateTime].map((bpm, index) => {\r\n          return `${this.selectedHeartRateTime} 第${index + 1}小时的心率是${bpm} BPM`;\r\n        }).join('，');\r\n      } else if (this.selectedHeartRateType === 'month') {\r\n        heartRateData = this.monthlyData[this.selectedHeartRateTime].map((bpm, index) => {\r\n          return `${this.selectedHeartRateTime} 第${index * 5 + 1}日的心率是${bpm} BPM`;\r\n        }).join('，');\r\n      }\r\n      this.userPrompt += heartRateData + '。';\r\n    },\r\n    onStepYearChange() {\r\n      this.selectedStepMonth = \"all\"; // 默认选择“全部”\r\n    },\r\n    addStepData() {\r\n      if (this.selectedStepMonth === 'all') {\r\n        // 添加所有月份的步数数据\r\n        const allStepsData = this.months.map((month, index) => {\r\n          return `2024年${month}的平均步数是${this.fetchChartDataForYear(this.selectedStepYear)[index] * 50}步`;\r\n        }).join('，');\r\n        this.userPrompt += allStepsData + '。';\r\n      } else {\r\n        // 只添加选中的月份数据\r\n        const stepData = `2024年${this.months[this.selectedStepMonth - 1]}的平均步数是${this.fetchChartDataForYear(this.selectedStepYear)[this.selectedStepMonth - 1] * 50}步`;\r\n        this.userPrompt += stepData + '。';\r\n      }\r\n    },\r\n    fetchChartDataForYear(year) {\r\n      const data = {\r\n        2023: [20, 40, 60, 80, 50, 30, 40, 60, 50, 70, 60, 50],\r\n        2024: [50, 70, 90, 30, 40, 60, 80, 20, 40, 50, 70, 60],\r\n      };\r\n      return data[year] || [];\r\n    },\r\n    submitPrompt() {\r\n      const prompt = `${this.userPrompt}`;\r\n      const requestBody = {\r\n        content: prompt,\r\n        sessionId: this.sessionId\r\n      };\r\n      axios.post('/api/chat/send', requestBody)\r\n          .then(response => {\r\n            const responseData = response.data;\r\n            if (responseData && responseData.data && responseData.code === 0) {\r\n              this.analysisResult = responseData.data.content; // 显示从大语言模型返回的内容\r\n            } else {\r\n              console.error('接收到错误或格式无效:', responseData);\r\n              this.analysisResult = '接收到错误或格式无效';\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('发送消息错误:', error);\r\n            this.analysisResult = `错误：${error.message || \"与服务器通信失败\"}`;\r\n          });\r\n    },\r\n    readAloud() {\r\n      if ('speechSynthesis' in window) {\r\n        const speech = new SpeechSynthesisUtterance(this.analysisResult);\r\n        speech.lang = 'zh-CN'; // 设置语言为中文\r\n        window.speechSynthesis.speak(speech);\r\n      } else {\r\n        alert('您的浏览器不支持语音合成功能');\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#app {\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  background-color: #ffe9e9;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.containerAI {\r\n  height: 600px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #ffe9e9;\r\n  padding: 20px;\r\n}\r\n\r\n.moduleAI {\r\n  background-color: #ffffff;\r\n  border-radius: 30px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 8px rgba(221, 37, 37, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 800px;\r\n}\r\n\r\n.data-selection {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.selection-row {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.label {\r\n  margin-right: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\n.custom-select {\r\n  position: relative;\r\n  border-radius: 15px;\r\n  background-color: #f0b8b8;\r\n  color: white;\r\n  border: none;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  width: 100px;\r\n  height: 30px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.add-button {\r\n  border-radius: 15px;\r\n  background-color: #f0b8b8;\r\n  color: white;\r\n  border: none;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  padding: 5px 15px;\r\n}\r\n\r\n.add-button:hover {\r\n  background-color: #e09090;\r\n}\r\n\r\n.input-container textarea {\r\n  width: 100%;\r\n  height: 100px;\r\n  border-radius: 15px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  resize: none;\r\n}\r\n\r\n.submit-button {\r\n  border-radius: 15px;\r\n  background-color: #f0b8b8;\r\n  color: white;\r\n  border: none;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  padding: 10px 20px;\r\n  margin-top: 10px;\r\n  align-self: flex-end;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #e09090;\r\n}\r\n\r\n.read-button {\r\n  border-radius: 15px;\r\n  background-color: #f0b8b8;\r\n  color: white;\r\n  border: none;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  padding: 10px 20px;\r\n  margin-top: 10px;\r\n  align-self: flex-end;\r\n}\r\n\r\n.read-button:hover {\r\n  background-color: #e09090;\r\n}\r\n\r\n.result textarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  border-radius: 15px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  resize: none;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}